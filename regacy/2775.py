'''
백준 알고리즘 2775 문제 풀이
작성자 ESENS
작성일 180516

“a 층의 b 호에 살려면 자신의 아래(a-1)층에 1호부터 b 호까지 사람들의 수의 합만큼 사람들을 데려와 살아야한다” 는 계약 조항을 꼭 지키고 들어와야 한다.

아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정 했을 때, 주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있나를 출력하라.
단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층에 i호에는 i명이 산다.

첫 번째 줄에 Test case의 수 T가 주어진다. 그리고 각각의 케이스마다 입력으로 첫 번째 줄에 정수 k, 두 번째 줄에 정수 n이 주어진다. (1 <= k <= 14, 1 <= n <= 14)
각각의 Test case에 대해서 해당 집에 거주민 수를 출력하라.


입력:
2
1
3
2
3

------------------------------------------------------------------------------------

출력:
6
10

a[k][n] = a[k-1][1] ~ + a[k-1][n]


'''


# 14호실 까지 나타내야 하므로.. 배열 인덱스는 15까지
# dp[i][j] 일때 i 는 0층부터 , j는 1호실부터 시작하기 때문에 인덱싱이 조금 헷갈렸다...

dp = dp = [[-1 for i in range(15)] for j in range(15)]

for i in range (1,16):
    dp[0][i-1] = i
    dp[i-1][0] = 1

for i in range(1,15):
    for j in range(1,15):
        #현재 호실 = 아랫층 현재 호실 + 현재층 이전 호실
        #현재 호실 자체가 다음 호실을 계산할 때 쓰이기 때문에 메모라이징이라고 할 수 있다
        dp[i][j] = dp[i-1][j] + dp[i][j-1]

cnt = int(input())
for i in range(0,cnt):
    k = int(input())
    j = int(input())
    #1호실 부터 시작하기 때문에..배열인덱스는 j-1
    print(dp[k][j-1])



