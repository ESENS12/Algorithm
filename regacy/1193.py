'''
백준 알고리즘 1193 문제 풀이
작성자 ESENS
작성일 180321

무한히 큰 배열에 다음과 같이 분수들이 적혀있다.

1/1	1/2	1/3	1/4	1/5	…
2/1	2/2	2/3	2/4	…	…
3/1	3/2	3/3	…	…	…
4/1	4/2	…	…	…	…
5/1	…	…	…	…	…
…	…	…	…	…	…
이와 같이 나열된 분수들을 1/1 -> 1/2 -> 2/1 -> 3/1 -> 2/2 -> … 과 같은 순서로 차례대로 1번, 2번, 3번, 4번, 5번, … 분수라고 하자.

X가 주어졌을 때, X번째 분수를 구하는 프로그램을 작성하시오.


풀이 :
지그재그로 이동한다.. 이걸 알아내는데 생각보다 오래걸림..

1p       2p            3p             4p
1/1    1/2 2/1    3/1 2/2 1/3    1/4 2/3 3/2 4/1   ...
형식으로 1페이즈, 2페이즈 로 나누어서 생각하면 쉬움
phase 범위 내에서 증/감 하는 규칙(짝/홀) 이다

'''

data = int(input())

if data <= 1:
    print("1/1")

index = 1
maximum = 1
# phase 는 1 + 2 + 3 + 4 ... + data 씩 증가하므로..
for phase in range(2, data+1):
    #해당 페이즈의 최대값을 찾는다(1+2+3+4+5 = 15)
    maximum += phase
    #입력값이 맥시멈 안에 있다면 해당 인덱스가 페이즈이다.
    if (maximum >= data):
        #인덱스는 최대값에서 입력값을 뺸 값으로, 해당 페이즈의 몇번째에(뒤에서) 존재하는지 찾기 위함
        index = maximum-data
        #print(phase)
        #print(maximum)
        #print(maximum-data)
        #원래 짝수라면 분자는 1부터 페이즈까지 증가 , 분모는 감소 하나 인덱스가 뒤에서부터 값이므로 반대로 계산해주면 끝!
        if (phase % 2 == 0):
            print(str(phase - index) + "/" + str(1 + index))
        else:
            print(str(1 + index) + "/" + str(phase - index))
        break


